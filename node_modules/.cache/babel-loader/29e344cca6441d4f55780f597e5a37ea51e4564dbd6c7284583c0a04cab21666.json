{"ast":null,"code":"var _jsxFileName = \"/home/dennies/Development/code/phase-2/CatFacts-Project-App/src/components/CatFact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatFact() {\n  _s();\n  const [data, setData] = useState([]);\n  const fetchCatFact = () => {\n    fetch('https://meowfacts.herokuapp.com/').then(response => response.json()).then(apiData => {\n      // Assuming the API response is an array of cat facts, update the state\n      setData(apiData);\n      console.log(apiData);\n    }).catch(error => {\n      console.error('Error fetching cat facts:', error);\n    });\n  };\n  useEffect(() => {\n    // Fetch cat facts when the component mounts\n    fetchCatFact();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cat Facts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCatFact,\n      children: \"Get New Facts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 61\n    }, this), Array.isArray(data) && data.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((fact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [fact, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchCatFact,\n          children: \"Get New Facts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 14\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: factttttttttttttttt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 68\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CatFact, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = CatFact;\nexport default CatFact;\nvar _c;\n$RefreshReg$(_c, \"CatFact\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CatFact","_s","data","setData","fetchCatFact","fetch","then","response","json","apiData","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","isArray","length","map","fact","index","factttttttttttttttt","_c","$RefreshReg$"],"sources":["/home/dennies/Development/code/phase-2/CatFacts-Project-App/src/components/CatFact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction CatFact() {\n  const [data, setData] = useState([]);\n\n  const fetchCatFact = () => {\n    fetch('https://meowfacts.herokuapp.com/')\n      .then((response) => response.json())\n      .then((apiData) => {\n        // Assuming the API response is an array of cat facts, update the state\n        setData(apiData);\n        console.log(apiData)\n        \n      })\n      .catch(error => {\n        console.error('Error fetching cat facts:', error);\n      });\n  };\n\n  useEffect(() => {\n    // Fetch cat facts when the component mounts\n    fetchCatFact();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n\n\n  return (\n    <div className=\"content\">\n      <h2>Cat Facts</h2>\n\n      <button onClick={fetchCatFact}>Get New Facts</button> <span>{data}</span>\n      \n      {Array.isArray(data) && data.length > 0 && (\n        <ul>\n          {data.map((fact, index) => (\n             \n            <li key={index}>{fact}\n             <button onClick={fetchCatFact}>Get New Facts</button> <span>{factttttttttttttttt}</span>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default CatFact;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzBC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,OAAO,IAAK;MACjB;MACAN,OAAO,CAACM,OAAO,CAAC;MAChBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IAEtB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd;IACAO,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAIR,oBACEL,OAAA;IAAKe,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElBpB,OAAA;MAAQqB,OAAO,EAAEhB,YAAa;MAAAW,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,eAAApB,OAAA;MAAAgB,QAAA,EAAOb;IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAExEE,KAAK,CAACC,OAAO,CAACpB,IAAI,CAAC,IAAIA,IAAI,CAACqB,MAAM,GAAG,CAAC,iBACrCxB,OAAA;MAAAgB,QAAA,EACGb,IAAI,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAEpB3B,OAAA;QAAAgB,QAAA,GAAiBU,IAAI,eACpB1B,OAAA;UAAQqB,OAAO,EAAEhB,YAAa;UAAAW,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,eAAApB,OAAA;UAAAgB,QAAA,EAAOY;QAAmB;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GADhFO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CA1CQD,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA4ChB,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}