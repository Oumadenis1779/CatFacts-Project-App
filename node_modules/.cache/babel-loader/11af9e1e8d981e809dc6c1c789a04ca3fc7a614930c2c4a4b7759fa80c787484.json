{"ast":null,"code":"/*import React, { useState } from 'react';\n\nfunction CatFact() {\n  const [fact, setFact] = useState('');\n\n\n  var requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n  \n  fetch(\"https://meowfacts.herokuapp.com/\", requestOptions)\n    .then(response => response.json())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n\n /*const fetchCatFact = async () => {\n    try {\n      const response = await fetch('https://meowfacts.herokuapp.com/');\n      if (response.ok) {\n        const data = await response.json();\n        const catFact = data.data;\n        console.log(catFact); // You can handle the catFact data as needed (e.g., updating state in a React component)\n      } else {\n        console.error('Failed to fetch cat fact');\n      }\n    } catch (error) {\n      console.error('Error fetching cat fact:', error);\n    }\n  };*/ // Call the fetchCatFact function to fetch a cat fact\n/*fetchCatFact();\n  \n\n  return (\n    <div className=\"content\">\n      <h2>Cat Fact</h2>\n      <button onClick={fetchCatFact}>Get New Fact</button>\n      {fact && <p>{fact}</p>}\n    </div>\n  );\n}\n\nexport default CatFact;*/import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CatFact(){const[fact,setFact]=useState('');const fetchCatFact=()=>{// Fetch a random cat fact from an API (e.g., https://meowfacts.herokuapp.com/)\n// and set the fact state.\nfetch('https://meowfacts.herokuapp.com/').then(res=>res.json()).then(data=>setFact(data.data)).catch(()=>console.error('Failed to fetch cat fact'));};return/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Cat Fact\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchCatFact,children:\"Get New Fact\"}),fact?/*#__PURE__*/_jsx(\"p\",{children:fact}):null]});}/*};\n\n  return (\n    <div className=\"content\">\n      <h2>Cat Fact</h2>\n      <button onClick={fetchCatFact}>Get New Fact</button>\n      {fact && <p>{fact}</p>}\n    </div>\n  );\n}*/export default CatFact;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","CatFact","fact","setFact","fetchCatFact","fetch","then","res","json","data","catch","console","error","className","children","onClick"],"sources":["/home/dennies/Development/code/phase-2/CatFacts-Project-App/src/components/CatFact.js"],"sourcesContent":["/*import React, { useState } from 'react';\n\nfunction CatFact() {\n  const [fact, setFact] = useState('');\n\n\n  var requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n  \n  fetch(\"https://meowfacts.herokuapp.com/\", requestOptions)\n    .then(response => response.json())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n\n /*const fetchCatFact = async () => {\n    try {\n      const response = await fetch('https://meowfacts.herokuapp.com/');\n      if (response.ok) {\n        const data = await response.json();\n        const catFact = data.data;\n        console.log(catFact); // You can handle the catFact data as needed (e.g., updating state in a React component)\n      } else {\n        console.error('Failed to fetch cat fact');\n      }\n    } catch (error) {\n      console.error('Error fetching cat fact:', error);\n    }\n  };*/\n  \n  // Call the fetchCatFact function to fetch a cat fact\n  /*fetchCatFact();\n  \n\n  return (\n    <div className=\"content\">\n      <h2>Cat Fact</h2>\n      <button onClick={fetchCatFact}>Get New Fact</button>\n      {fact && <p>{fact}</p>}\n    </div>\n  );\n}\n\nexport default CatFact;*/\n\nimport React, { useState } from 'react';\n\nfunction CatFact() {\n  const [fact, setFact] = useState('');\n\n  const fetchCatFact = () => {\n    // Fetch a random cat fact from an API (e.g., https://meowfacts.herokuapp.com/)\n    // and set the fact state.\n    fetch('https://meowfacts.herokuapp.com/')\n      .then((res) => res.json())\n      .then((data) => setFact(data.data))\n      .catch(() => console.error('Failed to fetch cat fact'));\n  };\n\n  return (\n    <div className=\"content\">\n      <h2>Cat Fact</h2>\n      <button onClick={fetchCatFact}>Get New Fact</button>\n      {fact ? <p>{fact}</p> : null}\n    </div>\n  );\n}\n\n  /*};\n\n  return (\n    <div className=\"content\">\n      <h2>Cat Fact</h2>\n      <button onClick={fetchCatFact}>Get New Fact</button>\n      {fact && <p>{fact}</p>}\n    </div>\n  );\n}*/\n\nexport default CatFact;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MA7BA,CA+BE;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACjB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAEpC,KAAM,CAAAQ,YAAY,CAAGA,CAAA,GAAM,CACzB;AACA;AACAC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAKN,OAAO,CAACM,IAAI,CAACA,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAC,IAAMC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAC3D,CAAC,CAED,mBACEZ,KAAA,QAAKa,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBhB,IAAA,OAAAgB,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBhB,IAAA,WAAQiB,OAAO,CAAEX,YAAa,CAAAU,QAAA,CAAC,cAAY,CAAQ,CAAC,CACnDZ,IAAI,cAAGJ,IAAA,MAAAgB,QAAA,CAAIZ,IAAI,CAAI,CAAC,CAAG,IAAI,EACzB,CAAC,CAEV,CAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,cAAe,CAAAD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}