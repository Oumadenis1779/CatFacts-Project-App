{"ast":null,"code":"var _jsxFileName = \"/home/dennies/Development/code/phase-2/CatFacts-Project-App/src/components/CatFact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatFact() {\n  _s();\n  const [fact, setFact] = useState('');\n  const fetchCatFact = async () => {\n    try {\n      const response = await fetch('https://meowfacts.herokuapp.com/');\n      if (response.ok) {\n        const data = await response.json();\n        const catFact = data.data;\n        console.log(catFact); // You can handle the catFact data as needed (e.g., updating state in a React component)\n      } else {\n        console.error('Failed to fetch cat fact');\n      }\n    } catch (error) {\n      console.error('Error fetching cat fact:', error);\n    }\n  };\n\n  // Call the fetchCatFact function to fetch a cat fact\n  fetchCatFact();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cat Fact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCatFact,\n      children: \"Get New Fact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), fact && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(CatFact, \"HRrGC5dHChD1v5vvpGyH33iqlss=\");\n_c = CatFact;\nexport default CatFact;\nvar _c;\n$RefreshReg$(_c, \"CatFact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CatFact","_s","fact","setFact","fetchCatFact","response","fetch","ok","data","json","catFact","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/dennies/Development/code/phase-2/CatFacts-Project-App/src/components/CatFact.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction CatFact() {\n  const [fact, setFact] = useState('');\n\n  const fetchCatFact = async () => {\n    try {\n      const response = await fetch('https://meowfacts.herokuapp.com/');\n      if (response.ok) {\n        const data = await response.json();\n        const catFact = data.data;\n        console.log(catFact); // You can handle the catFact data as needed (e.g., updating state in a React component)\n      } else {\n        console.error('Failed to fetch cat fact');\n      }\n    } catch (error) {\n      console.error('Error fetching cat fact:', error);\n    }\n  };\n  \n  // Call the fetchCatFact function to fetch a cat fact\n  fetchCatFact();\n  \n\n  return (\n    <div className=\"content\">\n      <h2>Cat Fact</h2>\n      <button onClick={fetchCatFact}>Get New Fact</button>\n      {fact && <p>{fact}</p>}\n    </div>\n  );\n}\n\nexport default CatFact;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;MAChE,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC,MAAMC,OAAO,GAAGF,IAAI,CAACA,IAAI;QACzBG,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,CAAC,CAAC;MACxB,CAAC,MAAM;QACLC,OAAO,CAACE,KAAK,CAAC,0BAA0B,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAED;EACAT,YAAY,CAAC,CAAC;EAGd,oBACEL,OAAA;IAAKe,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBhB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpB,OAAA;MAAQqB,OAAO,EAAEhB,YAAa;MAAAW,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnDjB,IAAI,iBAAIH,OAAA;MAAAgB,QAAA,EAAIb;IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAAClB,EAAA,CA7BQD,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AA+BhB,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}