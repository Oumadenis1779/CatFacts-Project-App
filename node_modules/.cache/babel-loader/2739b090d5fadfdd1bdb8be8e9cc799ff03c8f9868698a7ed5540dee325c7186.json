{"ast":null,"code":"var _jsxFileName = \"/home/dennies/Development/code/phase-2/CatFacts-Project-App/src/components/CatFact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatFact() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Initial fetch on component mount\n    fetchCatFact();\n  }, []);\n  const fetchCatFact = () => {\n    fetch('https://meowfacts.herokuapp.com/').then(response => response.json()).then(apiData => {\n      // Assuming the API response is an array of cat facts, update the state\n      setData(apiData);\n    }).catch(error => {\n      console.error('Error fetching cat facts:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cat Facts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCatFact,\n      children: \"Get New Facts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), data.map((fact, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fact\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(CatFact, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = CatFact;\nexport default CatFact;\nvar _c;\n$RefreshReg$(_c, \"CatFact\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CatFact","_s","data","setData","fetchCatFact","fetch","then","response","json","apiData","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","fact","index","_c","$RefreshReg$"],"sources":["/home/dennies/Development/code/phase-2/CatFacts-Project-App/src/components/CatFact.js"],"sourcesContent":["\n\nimport React, { useState, useEffect } from 'react';\n\nfunction CatFact() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Initial fetch on component mount\n    fetchCatFact();\n  }, []);\n\n  const fetchCatFact = () => {\n    fetch('https://meowfacts.herokuapp.com/')\n      .then((response) => response.json())\n      .then((apiData) => {\n        // Assuming the API response is an array of cat facts, update the state\n        setData(apiData);\n      })\n      .catch(error => {\n        console.error('Error fetching cat facts:', error);\n      });\n  };\n\n  return (\n    <div className=\"content\">\n      <h2>Cat Facts</h2>\n\n      <button onClick={fetchCatFact}>Get New Facts</button>\n      \n      {data.map((fact, index) => (\n        <p key={index}>{fact}</p>\n      ))}\n    </div>\n  );\n}\n\nexport default CatFact;\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd;IACAO,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAGA,CAAA,KAAM;IACzBC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,OAAO,IAAK;MACjB;MACAN,OAAO,CAACM,OAAO,CAAC;IAClB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElBnB,OAAA;MAAQoB,OAAO,EAAEf,YAAa;MAAAU,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEpDhB,IAAI,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBvB,OAAA;MAAAe,QAAA,EAAgBO;IAAI,GAAZC,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CA/BQD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAiChB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}